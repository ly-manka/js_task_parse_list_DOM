{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CCmCA,I,EAhCQ,EAgCF,EAAS,SAAS,aAAa,CAAC,MA9BpC,CAFM,E,A,S,C,E,G,M,O,C,G,O,E,E,E,EAAsB,AAkCrB,EAlC0B,QAAQ,G,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,KAEzB,IAAI,CAAC,SAAC,CAAA,CAAK,CAA3B,EACE,IAAM,EAAU,EAAI,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,QAAS,IAGpD,OAAO,AAFS,EAAI,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,QAAS,IAEnC,CACnB,GAEA,EAAgB,OAAO,CAAC,SAAC,CAAzB,EAAkC,OAAA,AAyB3B,EAzBgC,WAAW,CAAC,E,GA2BrD,AAxBA,SAAsB,CAAI,EACxB,IAAM,EAAY,EAAE,CAEf,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,E,G,CAAL,IAAA,IAAK,EAAA,EAAgB,EAAK,QAAQ,CAAA,OAAA,QAAA,CAAA,GAA7B,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAA,CAAA,EAA+B,CAA/B,IAAM,EAAN,EAAA,KAAA,CACG,EAAa,EAAO,WAAW,CAAC,IAAI,GACR,EAAA,EAAO,OAAO,CAAxC,EAA0B,EAA1B,GAAA,CAAK,EAAqB,EAArB,QAAA,CAAU,EAAW,EAAX,MAAvB,CACM,EAAc,WAAW,EAAO,OAAO,CAAC,QAAS,KACjD,EAAY,SAAS,GAE3B,EAAU,IAAI,CAAC,CACb,OAAQ,EACR,IAAK,EACL,SAAA,EACA,KAAM,CACR,EACF,C,C,M,E,CAZK,EAAA,CAAA,EAAA,EAAA,C,Q,C,G,CAAA,GAAA,AAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,E,Q,CAAA,GAAA,EAAA,MAAA,C,C,CAeP,EAMa","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nfunction sortList(list) {\n    var sortedEmployees = _to_consumable_array(list.children);\n    sortedEmployees.sort(function(el1, el2) {\n        var salary1 = el1.dataset.salary.replace(/[$,]/g, \"\");\n        var salary2 = el2.dataset.salary.replace(/[$,]/g, \"\");\n        return salary2 - salary1;\n    });\n    sortedEmployees.forEach(function(item) {\n        return list.appendChild(item);\n    });\n}\nfunction getEmployees(list) {\n    var employees = [];\n    var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n    try {\n        for(var _iterator = list.children[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n            var person = _step.value;\n            var personName = person.textContent.trim();\n            var _person_dataset = person.dataset, age = _person_dataset.age, position = _person_dataset.position, salary = _person_dataset.salary;\n            var cleanSalary = parseFloat(salary.replace(/[$,]/g, \"\"));\n            var numberAge = parseInt(age);\n            employees.push({\n                salary: cleanSalary,\n                age: numberAge,\n                position: position,\n                name: personName\n            });\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally{\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n            }\n        } finally{\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n    return employees;\n}\nvar people = document.querySelector(\"ul\");\nsortList(people);\ngetEmployees(people);\n\n//# sourceMappingURL=index.a2a39ea1.js.map\n","'use strict';\n\nfunction sortList(list) {\n  const sortedEmployees = [...list.children];\n\n  sortedEmployees.sort((el1, el2) => {\n    const salary1 = el1.dataset.salary.replace(/[$,]/g, '');\n    const salary2 = el2.dataset.salary.replace(/[$,]/g, '');\n\n    return salary2 - salary1;\n  });\n\n  sortedEmployees.forEach((item) => list.appendChild(item));\n}\n\nfunction getEmployees(list) {\n  const employees = [];\n\n  for (const person of list.children) {\n    const personName = person.textContent.trim();\n    const { age, position, salary } = person.dataset;\n    const cleanSalary = parseFloat(salary.replace(/[$,]/g, ''));\n    const numberAge = parseInt(age);\n\n    employees.push({\n      salary: cleanSalary,\n      age: numberAge,\n      position,\n      name: personName,\n    });\n  }\n\n  return employees;\n}\n\nconst people = document.querySelector('ul');\n\nsortList(people);\n\ngetEmployees(people);\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","sortedEmployees","people","document","querySelector","_array_without_holes","isArray","list","children","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","sort","el1","el2","salary1","dataset","salary","replace","salary2","forEach","item","appendChild","getEmployees","employees","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","next","done","person","value","personName","textContent","trim","_person_dataset","age","position","cleanSalary","parseFloat","numberAge","parseInt","push","err","return"],"version":3,"file":"index.a2a39ea1.js.map"}